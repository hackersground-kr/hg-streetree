# Run when commits are pushed to main
on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Docker using official script
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh
          sudo usermod -aG docker $USER
          export PATH=$PATH:/usr/bin/docker
          sudo systemctl start docker
          sudo systemctl enable docker
        shell: bash

      - name: Verify Docker installation
        run: |
          which docker
          docker --version
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Install azd
        uses: Azure/setup-azd@v1.0.0

      - name: Log in with Azure (Federated Credentials)
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Build and Push Docker image for Client
        run: |
          docker buildx build --platform linux/amd64 -f applications/client/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/client:latest applications/client/ --push

      - name: Build and Push Docker image for Server
        run: |
          docker buildx build --platform linux/amd64 -f applications/server/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/server:latest applications/server/ --push

      - name: Provision Infrastructure
        run: azd provision --no-prompt
        env:
          AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ secrets.AZD_INITIAL_ENVIRONMENT_CONFIG }}

      - name: Deploy Application
        run: azd deploy --no-prompt
